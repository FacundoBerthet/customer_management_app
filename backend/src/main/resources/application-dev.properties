# ==============================================
# Perfil: DEV (desarrollo local)
# ----------------------------------------------
# Acá pongo TODO lo específico para trabajar en local
# mientras desarrollo o pruebo manualmente.
# ==============================================

# -------------------
# Base de datos (PostgreSQL local)
# -------------------
# Si más adelante quiero H2, lo voy a mover acá también.
spring.datasource.url=jdbc:postgresql://localhost:5432/customerdb
spring.datasource.username=facu
spring.datasource.password=facudb

# -------------------
# JPA/Hibernate
# -------------------
# IMPORTANTE: a partir de ahora NO dejamos que Hibernate cree/actualice el esquema.
# Usamos Flyway para eso. Hibernate solo valida que el esquema coincida con las entidades.
spring.jpa.hibernate.ddl-auto=validate
# Muestro el SQL en logs para debug en dev
spring.jpa.show-sql=true

# -------------------
# Flyway
# -------------------
# ¿Qué hace Flyway?
# - Al iniciar la app, busca scripts en classpath:db/migration
# - Aplica los que falten y registra todo en flyway_schema_history
# - baselineOnMigrate=true le dice a Flyway que "adopte" un esquema existente
#   como punto de partida si la DB ya tiene tablas (útil en dev)
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
# Directorio por defecto: classpath:db/migration (no es necesario configurarlo)
# spring.flyway.locations=classpath:db/migration

# -------------------
# Logging (nivel de detalle)
# -------------------
# Si quiero ver consultas JPA/Hibernate más en detalle,
# puedo activar estos niveles cuando los necesite.
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace

# -------------------
# Swagger / OpenAPI (ya vienen del común). No repito acá.
# -------------------

# -------------------
# Actuator (observabilidad mínima en dev)
# -------------------
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

info.app.name=customer_management_app
info.app.description=Customer Management REST API (dev)
