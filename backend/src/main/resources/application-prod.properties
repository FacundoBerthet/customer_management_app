# ==============================================
# Perfil: PROD (despliegue)
# ----------------------------------------------
# Estas variables las pienso para el despliegue (cloud/servidor).
# Uso variables de entorno para credenciales.
# ==============================================

# -------------------
# Base de datos (PostgreSQL)
# -------------------
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

# -------------------
# JPA/Hibernate
# -------------------
# validate: así me aseguro que el esquema coincide con las entidades.
# La creación/alteración la va a manejar Flyway (migraciones versionadas).
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# -------------------
# Flyway
# -------------------
# En PROD Flyway debe estar activo para aplicar migraciones al arrancar.
spring.flyway.enabled=true
# No uso baseline en prod: la base debe iniciarse vacía o ya versionada.
# spring.flyway.baseline-on-migrate=false

# -------------------
# Swagger / OpenAPI
# -------------------
# En general lo puedo dejar accesible. Si quiero ocultarlo
# en prod, más adelante agrego flags para deshabilitarlo.
#springdoc.api-docs.enabled=false
#springdoc.swagger-ui.enabled=false

# -------------------
# CORS (producción)
# -------------------
# Defino orígenes permitidos para el frontend público.
# Se puede sobreescribir con variable de entorno CORS_ALLOWED_ORIGINS (separar múltiples por coma).
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:https://facundoberthet.github.io}

# -------------------
# Puerto (PaaS)
# -------------------
# Muchos PaaS (Render, Railway, Fly) inyectan PORT. Mantengo 8080 como fallback.
server.port=${PORT:8080}
