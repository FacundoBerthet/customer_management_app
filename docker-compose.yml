# =============================================================
# docker-compose para levantar Postgres + la app
# -------------------------------------------------------------
# Objetivo: un solo comando para probar el proyecto end-to-end
# =============================================================

services:
  db:
    image: postgres:16
    container_name: customer-postgres
    environment:
      POSTGRES_DB: customerdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppassword
    ports:
      # Mapeo HOST:CONTAINER -> uso 5433 en el host para evitar conflicto con PostgreSQL local en 5432
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d customerdb"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: customer-app
    environment:
      SPRING_PROFILES_ACTIVE: prod
      # Credenciales y URL para que la app conecte a Postgres del compose
      DB_URL: jdbc:postgresql://db:5432/customerdb
      DB_USER: appuser
      DB_PASSWORD: apppassword
      # Opcional: flags JVM
      JAVA_OPTS: "-Xms256m -Xmx512m"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  front:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: customer-front
    ports:
      - "8081:80"
    depends_on:
      - app

volumes:
  db_data:
